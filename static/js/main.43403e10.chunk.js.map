{"version":3,"sources":["Firebase.js","Components/AdminPage.js","Components/Login.js","Components/SignUp.js","Components/UserDetailPage.js","Components/UserPage.js","App.js","index.js"],"names":["Firebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firestore","getUsers","a","collection","get","docs","map","doc","userName","id","data","getUser","userDoc","exists","Error","createUser","name","email","password","console","log","set","tasks","role","login","addTask","task","userTasks","concat","merge","deleteTask","index","filter","_t","i","AdminPage","props","useState","users","setUsers","useEffect","fetchData","className","onClick","logout","user","_e","redirectToUserDetailPage","Login","userNameInput","setUserNameInput","passwordInput","setPasswordInput","errorMessage","setErrorMessage","validateAndLogin","length","isLoginSuccessful","type","placeholder","value","onChange","e","target","redirectToSignUp","SignUp","nameInput","setNameInput","emailInput","setEmailInput","passwordAgainInput","setPasswordAgainInput","isFinished","setIsFinished","verifyAndSignUp","some","input","signUp","wasSuccessful","redirectToLogin","UserDetailPage","back","icon","userInfo","htmlFor","UserPage","setUserInfo","isShowingAddTaskSection","setIsShowingAddTaskSection","newTaskInput","setNewTaskInput","taskIndex","previous","addTaskSection","tasksSection","color","size","App","loggedInUser","setLoggedInUser","currentPage","setCurrentPage","viewingUserDetail","setViewingUserDetail","username","userRole","library","add","fas","faPlusCircle","faTrashAlt","faArrowLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43403e10.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst Firebase = (() => {\n\tconst firebaseConfig = {\n\t\tapiKey: 'AIzaSyDPD5b6fyqQh5J-FnZMYYgpp_L-CQubjIo',\n\t\tauthDomain: 'simple-tasks-734ac.firebaseapp.com',\n\t\tprojectId: 'simple-tasks-734ac',\n\t\tstorageBucket: 'simple-tasks-734ac.appspot.com',\n\t\tmessagingSenderId: '373484943675',\n\t\tappId: '1:373484943675:web:b52e1585d6b1d56d3c1f1e',\n\t};\n\n\tfirebase.initializeApp(firebaseConfig);\n\tconst database = firebase.firestore();\n\n\tconst getUsers = async () => {\n\t\treturn (await database.collection('users').get()).docs.map((doc) => {\n\t\t\treturn {\n\t\t\t\tuserName: doc.id,\n\t\t\t\t...doc.data(),\n\t\t\t};\n\t\t});\n\t};\n\n\tconst getUser = async (userName) => {\n\t\tconst userDoc = await database.collection('users').doc(userName).get();\n\t\tif (userDoc.exists) {\n\t\t\treturn {\n\t\t\t\tuserName: userDoc.id,\n\t\t\t\t...userDoc.data(),\n\t\t\t};\n\t\t}\n\t\tthrow new Error('Username does not exist');\n\t};\n\n\tconst createUser = async (userName, name, email, password) => {\n\t\ttry {\n\t\t\tconsole.log(await getUser(userName));\n\t\t\treturn false;\n\t\t} catch (_error) {\n\t\t\tawait database\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(userName)\n\t\t\t\t.set({ name, email, password, tasks: [], role: 'user' });\n\t\t\treturn true;\n\t\t}\n\t};\n\n\tconst login = async (userName, password) => {\n\t\ttry {\n\t\t\treturn (await getUser(userName)).password === password;\n\t\t} catch (_error) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst addTask = async (userName, task) => {\n\t\tconst userTasks = (await getUser(userName)).tasks;\n\t\tawait database\n\t\t\t.collection('users')\n\t\t\t.doc(userName)\n\t\t\t.set({ tasks: userTasks.concat(task) }, { merge: true });\n\t};\n\n\tconst deleteTask = async (userName, index) => {\n\t\tconst userTasks = (await getUser(userName)).tasks;\n\t\tawait database\n\t\t\t.collection('users')\n\t\t\t.doc(userName)\n\t\t\t.set(\n\t\t\t\t{ tasks: userTasks.filter((_t, i) => i !== index) },\n\t\t\t\t{ merge: true }\n\t\t\t);\n\t};\n\n\treturn {\n\t\tgetUsers,\n\t\tgetUser,\n\t\tcreateUser,\n\t\tlogin,\n\t\taddTask,\n\t\tdeleteTask,\n\t};\n})();\n\nexport default Firebase;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Firebase from '../Firebase';\nimport '../Styles/AdminPage.css';\n\nconst AdminPage = (props) => {\n\tconst [users, setUsers] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetUsers(await Firebase.getUsers());\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"admin-page\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<h1>Admin</h1>\n\t\t\t\t<button className=\"logout-button\" onClick={props.logout}>\n\t\t\t\t\tSair\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<h2>Usuários</h2>\n\t\t\t{users.map((user, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"admin-user-item\"\n\t\t\t\t\t\tonClick={(_e) => props.redirectToUserDetailPage(user)}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{user.userName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nAdminPage.propTypes = {\n\tredirectToUserDetailPage: PropTypes.func,\n\tlogout: PropTypes.func,\n};\n\nexport default AdminPage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/Login.css';\n\nconst Login = (props) => {\n\tconst [userNameInput, setUserNameInput] = useState('');\n\tconst [passwordInput, setPasswordInput] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState('');\n\n\tconst validateAndLogin = async () => {\n\t\tif (userNameInput.length === 0 || passwordInput.length === 0) {\n\t\t\tsetErrorMessage('Dados inválidos');\n\t\t} else {\n\t\t\tconst isLoginSuccessful = await props.login(userNameInput, passwordInput);\n\t\t\tsetErrorMessage(isLoginSuccessful ? '' : 'Dados inválidos');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<h1>Login</h1>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Nome de usuário\"\n\t\t\t\tvalue={userNameInput}\n\t\t\t\tonChange={(e) => setUserNameInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Senha\"\n\t\t\t\tvalue={passwordInput}\n\t\t\t\tonChange={(e) => setPasswordInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<span className=\"login-error-span\">{errorMessage}</span>\n\t\t\t<button onClick={(_e) => validateAndLogin()} className=\"enter-button\">\n\t\t\t\tEntrar\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={(_e) => props.redirectToSignUp()}\n\t\t\t\tclassName=\"not-a-user-button\"\n\t\t\t>\n\t\t\t\tAinda não tenho cadastro\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nLogin.propTypes = {\n\tlogin: PropTypes.func,\n\tredirectToSignUp: PropTypes.func,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/SignUp.css';\n\nconst SignUp = (props) => {\n\tconst [nameInput, setNameInput] = useState('');\n\tconst [userNameInput, setUserNameInput] = useState('');\n\tconst [emailInput, setEmailInput] = useState('');\n\tconst [passwordInput, setPasswordInput] = useState('');\n\tconst [passwordAgainInput, setPasswordAgainInput] = useState('');\n\tconst [errorMessage, setErrorMessage] = useState('');\n\tconst [isFinished, setIsFinished] = useState(false);\n\n\tconst verifyAndSignUp = async () => {\n\t\tif (\n\t\t\t[\n\t\t\t\tuserNameInput,\n\t\t\t\tnameInput,\n\t\t\t\temailInput,\n\t\t\t\tpasswordInput,\n\t\t\t\tpasswordAgainInput,\n\t\t\t].some((input) => input.length === 0)\n\t\t) {\n\t\t\tsetErrorMessage('Preencha todos os dados');\n\t\t} else if (passwordInput !== passwordAgainInput) {\n\t\t\tsetErrorMessage('Senhas não batem');\n\t\t} else {\n\t\t\tconst wasSuccessful = await props.signUp(\n\t\t\t\tuserNameInput,\n\t\t\t\tnameInput,\n\t\t\t\temailInput,\n\t\t\t\tpasswordInput\n\t\t\t);\n\t\t\tsetErrorMessage(wasSuccessful ? '' : 'Usuário já existe');\n\t\t\tsetIsFinished(wasSuccessful);\n\t\t}\n\t};\n\n\tconst finishedScreen = (\n\t\t<div className=\"sign-up\">\n\t\t\t<span className=\"sign-up-successful-span\">\n\t\t\t\tUsuário cadastrado com sucesso\n\t\t\t</span>\n\t\t\t<button onClick={(_e) => props.redirectToLogin()}>Fazer login</button>\n\t\t</div>\n\t);\n\n\tconst signUpForm = (\n\t\t<div className=\"sign-up\">\n\t\t\t<input\n\t\t\t\tclassName=\"name-input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Nome\"\n\t\t\t\tvalue={nameInput}\n\t\t\t\tonChange={(e) => setNameInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Nome de usuário\"\n\t\t\t\tvalue={userNameInput}\n\t\t\t\tonChange={(e) => setUserNameInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"email\"\n\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\tvalue={emailInput}\n\t\t\t\tonChange={(e) => setEmailInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Senha\"\n\t\t\t\tvalue={passwordInput}\n\t\t\t\tonChange={(e) => setPasswordInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Confirme a senha\"\n\t\t\t\tvalue={passwordAgainInput}\n\t\t\t\tonChange={(e) => setPasswordAgainInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<span className=\"sign-up-error-span\">{errorMessage}</span>\n\t\t\t<button onClick={verifyAndSignUp}>Cadastrar-se</button>\n\t\t</div>\n\t);\n\n\treturn isFinished ? finishedScreen : signUpForm;\n};\n\nSignUp.propTypes = {\n\tsignUp: PropTypes.func,\n\tredirectToLogin: PropTypes.func,\n};\n\nexport default SignUp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/UserDetailPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst UserDetailPage = (props) => {\n\treturn (\n\t\t<div className=\"user-detail-page\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<button className=\"back-button\" onClick={props.back}>\n\t\t\t\t\t<FontAwesomeIcon icon=\"arrow-left\" />\n\t\t\t\t</button>\n\t\t\t\t<h1>{props.userInfo.userName}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"user-info-section\">\n\t\t\t\t<div className=\"user-info-name-section\">\n\t\t\t\t\t<label htmlFor=\"name\">Nome: </label>\n\t\t\t\t\t<span>{props.userInfo.name}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-email-section\">\n\t\t\t\t\t<label htmlFor=\"email\">E-mail: </label>\n\t\t\t\t\t<span>{props.userInfo.email}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-role-section\">\n\t\t\t\t\t<label htmlFor=\"role\">Privilégios: </label>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{props.userInfo.role === 'admin' ? 'Administrador' : 'Usuário'}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"user-info-tasks-section \">\n\t\t\t\t\t<label htmlFor=\"tasks\">Tarefas: </label>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{props.userInfo.tasks.map((task, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"user-info-task-item\" key={index}>\n\t\t\t\t\t\t\t\t\t<span>{task}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nUserDetailPage.propTypes = {\n\tuserInfo: PropTypes.shape({\n\t\tname: PropTypes.string,\n\t\tuserName: PropTypes.string,\n\t\temail: PropTypes.string,\n\t\ttasks: PropTypes.arrayOf(PropTypes.string),\n\t\trole: PropTypes.string,\n\t}),\n\tback: PropTypes.func,\n};\n\nexport default UserDetailPage;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Firebase from '../Firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../Styles/UserPage.css';\n\nconst UserPage = (props) => {\n\tconst [userInfo, setUserInfo] = useState(null);\n\tconst [isShowingAddTaskSection, setIsShowingAddTaskSection] = useState(false);\n\tconst [newTaskInput, setNewTaskInput] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tsetUserInfo(await Firebase.getUser(props.user));\n\t\t};\n\t\tfetchData();\n\t}, [props.user]);\n\n\tconst deleteTask = async (taskIndex) => {\n\t\tawait Firebase.deleteTask(props.user, taskIndex);\n\t\tsetUserInfo((previous) => {\n\t\t\treturn {\n\t\t\t\t...previous,\n\t\t\t\ttasks: previous.tasks.filter((_t, index) => index !== taskIndex),\n\t\t\t};\n\t\t});\n\t};\n\n\tconst addTask = async () => {\n\t\tawait Firebase.addTask(props.user, newTaskInput);\n\t\tsetUserInfo((previous) => {\n\t\t\treturn {\n\t\t\t\t...previous,\n\t\t\t\ttasks: previous.tasks.concat(newTaskInput),\n\t\t\t};\n\t\t});\n\t\tsetNewTaskInput('');\n\t\tsetIsShowingAddTaskSection(false);\n\t};\n\n\tconst addTaskSection = (\n\t\t<div className=\"add-task-section\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"add-new-task-input\"\n\t\t\t\tvalue={newTaskInput}\n\t\t\t\tonChange={(e) => setNewTaskInput(e.target.value)}\n\t\t\t></input>\n\t\t\t<button onClick={addTask}>Adicionar</button>\n\t\t</div>\n\t);\n\n\tconst tasksSection =\n\t\tuserInfo !== null ? (\n\t\t\t<div className=\"tasks-section\">\n\t\t\t\t<h2>Tarefas</h2>\n\t\t\t\t{userInfo.tasks.map((task, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"task\" key={index}>\n\t\t\t\t\t\t\t<span>{task}</span>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"delete-task-button\"\n\t\t\t\t\t\t\t\tonClick={(_e) => deleteTask(index)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"trash-alt\" color=\"black\" size=\"lg\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{isShowingAddTaskSection ? (\n\t\t\t\t\taddTaskSection\n\t\t\t\t) : (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-task-button\"\n\t\t\t\t\t\tonClick={(_e) => setIsShowingAddTaskSection(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FontAwesomeIcon icon=\"plus-circle\" color=\"white\" size=\"lg\" />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t) : null;\n\n\treturn (\n\t\t<div className=\"user-page\">\n\t\t\t{userInfo !== null ? (\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<h1 className=\"user-page-header\">{userInfo.name}</h1>\n\t\t\t\t\t<button className=\"logout-button\" onClick={props.logout}>\n\t\t\t\t\t\tSair\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{tasksSection}\n\t\t</div>\n\t);\n};\n\nUserPage.propTypes = {\n\tuser: PropTypes.string,\n\tlogout: PropTypes.func,\n};\n\nexport default UserPage;\n","import React, { useState } from 'react';\nimport './App.css';\nimport AdminPage from './Components/AdminPage';\nimport Login from './Components/Login';\nimport SignUp from './Components/SignUp';\nimport UserDetailPage from './Components/UserDetailPage';\nimport UserPage from './Components/UserPage';\nimport Firebase from './Firebase';\n\nconst App = () => {\n\tconst [loggedInUser, setLoggedInUser] = useState(null);\n\tconst [currentPage, setCurrentPage] = useState('login');\n\tconst [viewingUserDetail, setViewingUserDetail] = useState(null);\n\n\tconst login = async (username, password) => {\n\t\tif (await Firebase.login(username, password)) {\n\t\t\tconst userRole = (await Firebase.getUser(username)).role;\n\t\t\tsetLoggedInUser(username);\n\t\t\tsetCurrentPage(userRole !== 'admin' ? 'user-page' : 'admin-page');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst redirectToSignUp = () => {\n\t\tsetCurrentPage('sign-up');\n\t};\n\n\tconst signUp = async (username, name, email, password) => {\n\t\treturn await Firebase.createUser(username, name, email, password);\n\t};\n\n\tconst redirectToLogin = () => {\n\t\tsetCurrentPage('login');\n\t};\n\n\tconst redirectToUserDetailPage = (user) => {\n\t\tsetViewingUserDetail(user);\n\t\tsetCurrentPage('user-detail-page');\n\t};\n\n\tconst backToAdminPage = () => {\n\t\tsetCurrentPage('admin-page');\n\t};\n\n\tconst logout = () => {\n\t\tsetCurrentPage('login');\n\t\tsetLoggedInUser(null);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{currentPage === 'login' ? (\n\t\t\t\t<Login login={login} redirectToSignUp={redirectToSignUp} />\n\t\t\t) : currentPage === 'sign-up' ? (\n\t\t\t\t<SignUp signUp={signUp} redirectToLogin={redirectToLogin} />\n\t\t\t) : currentPage === 'user-page' ? (\n\t\t\t\t<UserPage user={loggedInUser} logout={logout} />\n\t\t\t) : currentPage === 'admin-page' ? (\n\t\t\t\t<AdminPage\n\t\t\t\t\tredirectToUserDetailPage={redirectToUserDetailPage}\n\t\t\t\t\tlogout={logout}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<UserDetailPage userInfo={viewingUserDetail} back={backToAdminPage} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n\tfas,\n\tfaPlusCircle,\n\tfaTrashAlt,\n\tfaArrowLeft,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas, faPlusCircle, faTrashAlt, faArrowLeft);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}